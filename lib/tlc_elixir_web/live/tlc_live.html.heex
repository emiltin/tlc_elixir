<div class="w-full bg-gray-900">
  <div class="container mx-auto">
    <!-- Current State section (dark mode) -->
    <div class="p-4 mb-8">
      <div class="bg-gray-800 p-4 rounded shadow-lg border border-gray-700">
        <h2 class="text-lg font-semibold text-gray-200 mb-3">State</h2>
        <div class="grid grid-cols-3 gap-3 text-sm">
          <div class="bg-gray-700 p-2 rounded shadow-sm flex justify-between items-center">
            <span class="text-xs font-medium text-gray-300">Base Time:</span>
            <span class="font-mono text-gray-200"><%= @tlc.logic.base_time %></span>
          </div>
          <div class="bg-gray-700 p-2 rounded flex justify-between items-center">
            <span class="text-xs font-medium text-gray-300">Cycle Time:</span>
            <span class="font-mono text-gray-200"><%= @tlc.logic.cycle_time %></span>
          </div>
          <div class="bg-gray-700 p-2 rounded flex justify-between items-center">
            <span class="text-xs font-medium text-gray-300">Offset (program / adjust / actual)</span>
            <span class="font-mono text-gray-200"><%= @tlc.logic.program.offset %>/<%= @tlc.logic.offset_adjust %>/<%= @tlc.logic.offset %></span>
          </div>
          <div class="bg-gray-700 p-2 rounded flex justify-between items-center">
            <span class="text-xs font-medium text-gray-300">Target Offset:</span>
            <span class="font-mono text-gray-200"><%= @tlc.logic.target_offset %></span>
          </div>
          <div class="bg-gray-700 p-2 rounded flex justify-between items-center">
            <span class="text-xs font-medium text-gray-300">Target Distance:</span>
            <span class="font-mono text-gray-200"><%= @tlc.logic.target_distance %></span>
          </div>
          <div class="bg-gray-700 p-2 rounded flex justify-between items-center">
            <span class="text-xs font-medium text-gray-300">Waited:</span>
            <span class="font-mono text-gray-200"><%= @tlc.logic.waited %></span>
          </div>
        </div>
      </div>
    </div>

    <!-- Available Programs section -->
    <div class="p-4 mb-8">
      <div class="bg-gray-800 p-4 rounded shadow-lg border border-gray-700">
        <h2 class="text-lg font-semibold text-gray-200 mb-3">Available Programs</h2>
        <div class="flex flex-wrap gap-3">
          <%= for {program_name, _program} <- @tlc.programs do %>
            <div class="bg-gray-700 px-3 py-2 rounded-md text-gray-200 flex items-center cursor-pointer hover:bg-gray-600 transition-colors"
                 phx-click="switch_program" phx-value-program_name={program_name}>
              <span class="font-medium"><%= program_name %></span>
            </div>
          <% end %>
        </div>
      </div>
    </div>

    <!-- Cycle table section -->
    <div class="p-4 overflow-x-auto">
      <div class="bg-gray-800 p-4 rounded shadow-lg border border-gray-700">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-semibold text-gray-200">Cycle</h2>
          <button phx-click="show_program_modal" class="bg-stone-600 hover:bg-purple-700 text-white px-4 py-2 rounded">
            View Program
          </button>
        </div>
        
        <!-- Column-based layout -->
        <div class="flex border-t border-l border-gray-600">
          <!-- Labels column -->
          <div class="w-24 flex flex-col">
            <div class="p-2 h-12 flex items-center justify-left font-semibold bg-gray-700 text-gray-200 border-r border-b border-gray-600">Cycle</div>
            <div class="p-2 h-12 flex items-center text-left bg-gray-700 text-gray-200 font-medium border-r border-b border-gray-600">Offset</div>
            <div class="p-2 h-12 flex items-center text-left bg-gray-700 text-gray-200 font-medium border-r border-b border-gray-600">Skips</div>
            <div class="p-2 h-12 flex items-center text-left bg-gray-700 text-gray-200 font-medium border-r border-b border-gray-600">Waits</div>
            <div class="p-2 h-12 flex items-center text-left bg-gray-700 text-gray-200 font-medium border-r border-b border-gray-600">Switch</div>
            <%= for {group, i} <- Enum.with_index(@tlc.logic.program.groups) do %>
              <div class={"p-2 h-12 flex items-center text-left bg-gray-700 text-gray-200 font-medium border-r #{if i == length(@tlc.logic.program.groups) - 1, do: "", else: "border-b"} border-gray-600"}>
                <%= group %>
              </div>
            <% end %>
          </div>
          
          <!-- Data columns -->
          <%= for {cycle, col_idx} <- Enum.with_index(0..(@tlc.logic.program.length - 1)) do %>
            <div class={"flex-1 flex flex-col relative #{if col_idx == @tlc.logic.program.length - 1, do: "border-r", else: ""} border-gray-600 #{if @tlc.logic.cycle_time == cycle, do: "outline outline-4 outline-offset-0 outline-gray-500 z-10 rounded", else: ""}"}>
              <!-- Header cell -->
              <div class="p-2 h-12 flex items-center justify-center font-semibold border-r border-b border-gray-600 text-gray-200">
                <%= cycle %>
              </div>
              
              <!-- Offset cell -->
              <% 
                is_between = cond do
                  @tlc.logic.target_distance > 0 -> 
                    if @tlc.logic.target_offset < @tlc.logic.offset do
                      # Wrap around case for positive distance
                      cycle > @tlc.logic.offset|| cycle <= @tlc.logic.target_offset
                    else
                      # Normal case
                      cycle > @tlc.logic.offset && cycle <= @tlc.logic.target_offset
                    end
                  @tlc.logic.target_distance < 0 ->
                    if @tlc.logic.target_offset > @tlc.logic.offset do
                      # Wrap around case for negative distance
                      cycle < @tlc.logic.offset || cycle >= @tlc.logic.target_offset
                    else
                      # Normal case
                      cycle < @tlc.logic.offset && cycle >= @tlc.logic.target_offset
                    end
                  true -> false
                end 
              %>
              <div class={"p-2 h-12 flex items-center justify-center cursor-pointer border-r border-b border-gray-600 #{cond do 
                cycle == @tlc.logic.offset && cycle == @tlc.logic.target_offset -> "bg-purple-700" 
                cycle == @tlc.logic.offset -> "bg-purple-700"
                cycle == @tlc.logic.target_offset -> "bg-gray-500"
                is_between -> "bg-gray-400"
                true -> "hover:bg-gray-600"
              end}"} 
                phx-click="set_target_offset" phx-value-target_offset={cycle}>
                <%= if cycle == @tlc.logic.offset do %>
                  <span class="font-medium text-gray-200">
                    <%= if @tlc.logic.target_distance != 0 do %>
                      <%= if @tlc.logic.target_distance > 0, do: "+", else: "" %><%= @tlc.logic.target_distance %>
                    <% else %>
                      0
                    <% end %>
                  </span>
                <% else %>
                  <span class="opacity-0">0</span>
                <% end %>
              </div>
              
              <!-- Skip cell -->
              <% 
                skip_duration = Map.get(@tlc.logic.program.skips, cycle, 0)
                has_skip = skip_duration > 0
                is_start_of_skip = has_skip
                is_within_skip = Enum.any?(@tlc.logic.program.skips, fn {start, duration} -> 
                  cycle > start && cycle < start + duration
                end)
              %>
              <div class={"p-2 h-12 flex items-center justify-center border-r border-b border-gray-600 #{if is_start_of_skip || is_within_skip, do: "bg-gray-400", else: ""}"}>
                <%= if is_start_of_skip do %>
                  <%= skip_duration %>
                <% else %>
                  <span class="opacity-0">0</span>
                <% end %>
              </div>
              
              <!-- Wait cell -->
              <% 
                wait_duration = Map.get(@tlc.logic.program.waits, cycle, 0)
                has_wait = wait_duration > 0
              %>
              <div class={"p-2 h-12 flex items-center justify-center border-r border-b border-gray-600 #{if has_wait, do: "bg-gray-400", else: ""}"}>
                <%= if has_wait do %>
                  <%= wait_duration %>
                <% else %>
                  <span class="opacity-0">0</span>
                <% end %>
              </div>
              
              <!-- Switch cell -->
              <% is_switch_point = cycle == @tlc.logic.program.switch %>
              <div class={"p-2 h-12 flex items-center justify-center border-r border-b border-gray-600 #{if is_switch_point, do: "bg-gray-400", else: ""}"}>
                <span class="opacity-0">0</span>
              </div>
              
              <!-- Group signal cells -->
              <%= for {_, i} <- Enum.with_index(@tlc.logic.program.groups) do %>
                <% state = TLC.Logic.resolve_state(@tlc.logic, cycle) %>
                <% signal = String.at(state, i) %>
                <div class={"p-2 h-12 flex items-center justify-center border-r #{if i == length(@tlc.logic.program.groups) - 1, do: "", else: "border-b"} border-gray-600 #{cell_bg_class(signal)}"}>
                  <span class="text-gray-200"><%= signal %></span>
                </div>
              <% end %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <!-- Program Modal -->
  <div id="program-modal" class={"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 #{if @show_program_modal, do: "", else: "hidden"}"}>
    <div class="bg-gray-800 rounded-lg p-6 max-w-3xl w-full max-h-[90vh] overflow-y-auto border border-gray-700">
      <div class="flex justify-between items-center mb-4">
        <h3 class="text-xl font-semibold text-gray-200">Program Definition</h3>
        <button phx-click="hide_program_modal" class="text-gray-400 hover:text-gray-200">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="font-mono text-sm overflow-x-auto bg-gray-900 text-gray-200 p-4 rounded">
        <pre><%= format_program_as_elixir(@tlc.logic.program) %></pre>
      </div>
    </div>
  </div>
</div>