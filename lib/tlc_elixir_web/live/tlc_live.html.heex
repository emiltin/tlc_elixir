<h1>TLC Program Live</h1>

<div>
  <form phx-submit="set_target_offset">
    <label>Target Offset:
      <input name="target_offset" type="number" value={@target_offset} />
    </label>
    <button type="submit">Set</button>
  </form>
</div>

<div class="grid-container">
  <div>
    <h2>Program Definition</h2>
    <table border="1">
      <tr><th>Length:</th><td><%= @program.length %></td></tr>
      <tr>
        <th>Groups:</th>
        <td>
          <ul style="margin: 0; padding-left: 20px;">
            <%= for group <- @program.groups do %>
              <li><%= group %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      <tr>
        <th>States:</th>
        <td>
          <table border="1">
            <tr>
              <th>Time</th>
              <%= for group <- @program.groups do %>
                <th><%= group %></th>
              <% end %>
            </tr>
            <%= for {time, state} <- Enum.sort_by(@program.states, fn {k, _} -> 
                  cond do
                    is_binary(k) -> String.to_integer(k)
                    is_integer(k) -> k
                    true -> 0
                  end
                end) do %>
              <tr>
                <td><%= time %></td>
                <%= for i <- 0..(length(@program.groups)-1) do %>
                  <td><%= String.at(state, i) %></td>
                <% end %>
              </tr>
            <% end %>
          </table>
        </td>
      </tr>
      <tr>
        <th>Skips:</th>
        <td>
          <ul style="margin: 0; padding-left: 20px;">
            <%= for {cycle, duration} <- @program.skips do %>
              <li>Cycle <%= cycle %>: skip <%= duration %></li>
            <% end %>
          </ul>
        </td>
      </tr>
      <tr>
        <th>Waits:</th>
        <td>
          <ul style="margin: 0; padding-left: 20px;">
            <%= for {cycle, duration} <- @program.waits do %>
              <li>Cycle <%= cycle %>: wait up to <%= duration %></li>
            <% end %>
          </ul>
        </td>
      </tr>
    </table>
  </div>

  <div>
    <h2>Current State</h2>
    <table border="1">
      <tr><th>base_time:</th><td><%= @program.base_time %></td></tr>
      <tr><th>cycle_time:</th><td><%= @program.cycle_time %></td></tr>
      <tr><th>offset:</th><td><%= @program.offset %></td></tr>
      <tr><th>target_offset:</th><td><%= @program.target_offset %></td></tr>
      <tr><th>target_distance:</th><td><%= @program.target_distance %></td></tr>
      <tr><th>waited:</th><td><%= @program.waited %></td></tr>
      <tr>
        <th>current states:</th>
        <td>
          <table border="1">
            <tr>
              <%= for group <- @program.groups do %>
                <th><%= group %></th>
              <% end %>
            </tr>
            <tr>
              <%= for i <- 0..(length(@program.groups)-1) do %>
                <td><%= String.at(@program.current_states, i) %></td>
              <% end %>
            </tr>
          </table>
        </td>
      </tr>
    </table>
  </div>
</div>

<h2>Cycle Table</h2>
<div class="cycle-table-container">
  <table border="1">
    <thead>
      <tr>
        <th></th>
        <%= for cycle <- 0..(@program.length - 1) do %>
          <th style={if @program.cycle_time == cycle, do: "background: #ffd;", else: ""}>
            <%= cycle %>
          </th>
        <% end %>
      </tr>
    </thead>
    <tbody>
      <%= for {group, i} <- Enum.with_index(@program.groups) do %>
        <tr>
          <th><%= group %></th>
          <%= for cycle <- 0..(@program.length - 1) do %>
            <% state = TLC.resolve_state(@program, cycle) %>
            <td style={if @program.cycle_time == cycle, do: "background: #ffd;", else: ""}>
              <%= String.at(state, i) %>
            </td>
          <% end %>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<style>
  .grid-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin: 20px 0;
  }
  table {
    border-collapse: collapse;
  }
  th, td {
    padding: 6px 10px;
  }
  .cycle-table-container {
    overflow-x: auto;
    margin-bottom: 20px;
  }
</style>